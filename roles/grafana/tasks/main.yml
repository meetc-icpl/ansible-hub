---
- name: Add Grafana GPG key
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana repository
  apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: present

- name: Install Grafana
  apt:
    name: grafana
    state: present

- name: Start and enable Grafana service
  service:
    name: grafana-server
    state: started
    enabled: true

- name: Ensure /etc/grafana directory exists
  file:
    path: /etc/grafana
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy Grafana configuration
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: root
    mode: '0644'

- name: Configure Prometheus data source in Grafana
  template:
    src: grafana_datasource.j2  # Template file for Prometheus data source configuration
    dest: /etc/grafana/provisioning/datasources/prometheus.yml
    owner: root
    group: root
    mode: '0644'

- name: Restart Grafana service to apply configuration changes
  service:
    name: grafana-server
    state: restarted

- name: Test connection to Prometheus
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:9090/api/v1/query?query=up"
    method: GET
    return_content: yes
  register: prometheus_test
  failed_when: "'error' in prometheus_test.json"

- name: Show success message if connection test is successful
  debug:
    msg: "Successfully connected to Prometheus at http://{{ ansible_default_ipv4.address }}:9090"
  when: prometheus_test.status == 200

- name: Copy Node Exporter Dashboard JSON file to provisioning directory
  copy:
    src: ./node-exporter-dashboard.json  # Local path on the machine running the playbook
    dest: /etc/grafana/provisioning/dashboards/node-exporter-dashboard.json  # Path in Grafana provisioning folder
    owner: grafana
    group: grafana
    mode: '0644'

- name: Ensure Grafana dashboard provisioning configuration exists
  copy:
    dest: /etc/grafana/provisioning/dashboards/dashboards.yml
    content: |
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /etc/grafana/provisioning/dashboards
    owner: grafana
    group: grafana
    mode: '0644'

- name: Restart Grafana to apply the dashboard provisioning
  service:
    name: grafana-server
    state: restarted

- name: Allow port 3000 in the firewall
  ufw:
    rule: allow
    port: 3000
    proto: tcp

- name: Enable the firewall
  ufw:
    state: enabled
